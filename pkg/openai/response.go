package openai

import "encoding/json"

type Response struct {
	// Set of 16 key-value pairs that can be attached to an object.
	// This can be useful for storing additional information about the object in a structured format,
	// and querying for objects via API or the dashboard.
	Metadata map[string]string `json:"metadata,omitempty"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse
	User string `json:"user,omitempty"`
	// Unique identifier for this Response
	ID string `json:"id,omitempty"`
	// The status of the response generation. One of completed, failed, in_progress, or incomplete
	Status string `json:"status,omitempty"`
	// Unix timestamp (in seconds) of when this Response was created
	CreatedAt int `json:"created_at,omitempty"`
	// An error object returned when the model fails to generate a Response
	Error ResponseError `json:"error,omitempty"`
	// Details about why the response is incomplete
	IncompleteDetails IncompleteDetails `json:"incomplete_details,omitempty"`
	// An array of content items generated by the model
	Output []json.RawMessage `json:"output,omitempty"`
	// Represents token usage details including input tokens, output tokens, a breakdown of output tokens, and the total tokens used
	Usage ResponseUsage `json:"usage,omitempty"`
}

type ResponseUsage struct {
	// The number of input tokens
	InputTokens int `json:"input_tokens,omitempty"`
	// A detailed breakdown of the input tokens
	InputTokensDetails InputTokenDetails `json:"input_tokens_details,omitempty"`
	// The number of output tokens
	OutputTokens int `json:"output_tokens,omitempty"`
	// A detailed breakdown of the output tokens
	OutputTokensDetails OutputTokenDetails `json:"output_tokens_details,omitempty"`
	// The total number of tokens used
	TotalTokens int `json:"total_tokens,omitempty"`
}

type InputTokenDetails struct {
	// The number of tokens that were retrieved from the cache
	CachedTokens int `json:"cached_tokens,omitempty"`
}

type OutputTokenDetails struct {
	// The number of reasoning tokens
	ReasoningTokens int `json:"reasoning_tokens,omitempty"`
}

type ResponseError struct {
	// The error code for the response
	Code string `json:"code,omitempty"`
	// A human-readable description of the error
	Message string `json:"message,omitempty"`
}

type IncompleteDetails struct {
	Reason string
}
